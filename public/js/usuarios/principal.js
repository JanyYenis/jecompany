/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/usuarios/listado.js":
/*!******************************************!*\
  !*** ./resources/js/usuarios/listado.js ***!
  \******************************************/
/***/ (() => {

eval("\n\nvar tablaUsuarios = \"#tablaUsuarios\";\nvar rutaCargarListadoUsuarios = route(\"usuarios.listado\");\n$(function () {\n  listadoUsuarios();\n});\n\n/**\r\n * Funci√≥n que permite cargar el listado.\r\n */\nvar listadoUsuarios = function listadoUsuarios() {\n  var table = $(\"#tablaUsuarios\").DataTable({\n    paging: true,\n    responsive: true,\n    processing: false,\n    serverSide: false,\n    autowidth: false,\n    stateSave: true,\n    scrollX: true,\n    searchDelay: 500,\n    fixedHeader: {\n      header: true\n    },\n    ajax: {\n      \"url\": rutaCargarListadoUsuarios,\n      \"type\": \"GET\",\n      \"headers\": {\n        \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      data: function data(_data) {\n        generalidades.mostrarCargando(tablaUsuarios);\n        _data = Object.assign(_data);\n      },\n      dataSrc: function dataSrc(json) {\n        generalidades.ocultarCargando(tablaUsuarios);\n        return json.data;\n      }\n    },\n    buttons: [{\n      extend: \"pdf\",\n      text: '<i class=\"fa fa-download\"></i> PDF',\n      className: \"btn btn-light-danger\",\n      title: \"Listado Usuarios.\",\n      exportOptions: {\n        columns: \":not(.excluir)\"\n      }\n    }, {\n      text: '<i class=\"fa fa-sync-alt\"></i> Actualizar',\n      className: \"btn btn-secondary\",\n      action: function action(e, dt, node, config) {\n        dt.ajax.reload(null, false);\n      }\n    }],\n    columnDefs: [{\n      targets: \"all\",\n      className: \"text-center\"\n    }, {\n      targets: \"none\",\n      className: \"text-justify\"\n    }],\n    columns: [{\n      render: function render(data, type, full, meta) {\n        return meta.row + 1;\n      }\n    }, {\n      data: 'nombreCompleto',\n      name: 'nombreCompleto'\n    }, {\n      data: 'identificacion',\n      name: 'identificacion',\n      render: function render(data, type, full, meta) {\n        var _full$identificacion;\n        return (_full$identificacion = full.identificacion) !== null && _full$identificacion !== void 0 ? _full$identificacion : 'N/A';\n      }\n    }, {\n      data: 'tipo_documento',\n      name: 'tipo_documento'\n    }, {\n      data: 'genero',\n      name: 'genero'\n    }, {\n      data: 'fecha',\n      name: 'fecha'\n    }, {\n      data: 'telefono',\n      name: 'telefono'\n    },\n    // {\n    //     data: 'direccion',\n    //     name: 'direccion'\n    // },\n    {\n      data: 'id_ciudad',\n      name: 'id_ciudad'\n    }, {\n      data: 'estado',\n      name: 'estado'\n    }, {\n      data: 'action',\n      name: 'action',\n      orderable: false,\n      searchable: false\n    }],\n    order: [[0, \"asc\"]],\n    lengthMenu: [[15, 20, 50, 100, -1], [15, 20, 50, 100, \"Todos\"]],\n    pageLength: 15,\n    dom: \"<'row'<'col-sm-6 col-lg-6 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-6 col-lg-6 col-md-6'<'row'<'col-sm-6 col-lg-6 col-md-6 d-flex justify-content-end'l><'col-sm-6 col-lg-6 col-md-6 d-flex justify-content-end'B>>>>\\n            <'table-responsive'tr>\\n            <'row'<'col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start'i><'col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end'p>>\",\n    drawCallback: function drawCallback(settings) {\n      KTMenu.createInstances();\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/usuarios/listado.js\n");

/***/ }),

/***/ "./resources/js/usuarios/principal.js":
/*!********************************************!*\
  !*** ./resources/js/usuarios/principal.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nvar formRoles = '#formRoles';\nvar formPermisos = '#formPermisos';\n$(function () {\n  iniciarComponentes();\n  generalidades.validarFormulario(formRoles, enviarDatosRoles);\n  generalidades.validarFormulario(formPermisos, enviarDatosPermisos);\n});\nvar iniciarComponentes = function iniciarComponentes() {\n  var form = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var configMultiSelect = {\n    elemento: '#selectRoles',\n    selectableHeaderText: \"Roles Disponibles\",\n    selectionHeaderText: \"Roles Asignados\",\n    selectableHeaderPlaceholder: \"Escribe el nombre del rol\",\n    selectionHeaderPlaceholder: \"Escribe el nombre del rol\"\n  };\n  generalidades.multiSelect(configMultiSelect);\n  var configMultiSelect1 = {\n    elemento: '#selectPermisos',\n    selectableHeaderText: \"Permisos Disponibles\",\n    selectionHeaderText: \"Permisos Asignados\",\n    selectableHeaderPlaceholder: \"Escribe el nombre del permiso\",\n    selectionHeaderPlaceholder: \"Escribe el nombre del permiso\"\n  };\n  generalidades.multiSelect(configMultiSelect1);\n  // roles();\n  // permisos();\n};\n$(document).on('click', '.btnRolesPermisos', function () {\n  var id = $(this).attr('data-registro');\n  roles(id);\n  permisos(id);\n  $('#idUsuario').val(id);\n  $('#modalRolesPermisos').modal('show');\n});\nvar roles = function roles(id) {\n  var config = {\n    \"method\": \"POST\",\n    \"body\": {\n      \"usuario\": id\n    },\n    \"headers\": {\n      \"Content-Type\": generalidades.CONTENT_TYPE_JSON,\n      \"Accept\": generalidades.CONTENT_TYPE_JSON\n    }\n  };\n  var success = function success(response) {\n    if (response.estado === \"success\") {\n      $(\"#selectRoles\").multiSelect(\"deselect\");\n      $(\"#selectRoles option\").remove();\n      $(\"#selectRoles\").multiSelect(\"refresh\");\n      var options = \"\";\n      var seleccionados = [];\n      // console.log(response);\n      Object.entries(response.roles).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          id = _ref2[0],\n          rol = _ref2[1];\n        options = options + \"<option value=\\\"\".concat(rol.id, \"\\\" \").concat(rol.seleccionado ? \"selected\" : \"\", \">\").concat(rol.text, \"</option>\");\n        if (rol.seleccionado) {\n          seleccionados.push(rol.id);\n        }\n      });\n      $(\"#selectRoles\").append(options);\n      $(\"#selectRoles\").val(seleccionados);\n      $(\"#selectRoles\").multiSelect(\"refresh\");\n    }\n    // generalidades.ocultarCargando(\"body\");\n  };\n  var error = function error(response) {\n    generalidades.toastrGenerico(response.estado, response.mensaje);\n    // generalidades.ocultarCargando(\"body\");\n  };\n\n  // generalidades.mostrarCargando(\"body\");\n  generalidades.post(route('roles.buscarRol'), config, success, error);\n};\nvar permisos = function permisos(id) {\n  var config = {\n    \"method\": \"POST\",\n    \"body\": {\n      \"usuario\": id\n    },\n    \"headers\": {\n      \"Content-Type\": generalidades.CONTENT_TYPE_JSON,\n      \"Accept\": generalidades.CONTENT_TYPE_JSON\n    }\n  };\n  var success = function success(response) {\n    if (response.estado === \"success\") {\n      $(\"#selectPermisos\").multiSelect(\"deselect\");\n      $(\"#selectPermisos option\").remove();\n      $(\"#selectPermisos\").multiSelect(\"refresh\");\n      var options = \"\";\n      var seleccionados = [];\n      // console.log(response);\n      Object.entries(response.permisos).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          id = _ref4[0],\n          permiso = _ref4[1];\n        options = options + \"<option value=\\\"\".concat(permiso.id, \"\\\" \").concat(permiso.seleccionado ? \"selected\" : \"\", \">\").concat(permiso.text, \"</option>\");\n        if (permiso.seleccionado) {\n          seleccionados.push(permiso.id);\n        }\n      });\n      $(\"#selectPermisos\").append(options);\n      $(\"#selectPermisos\").val(seleccionados);\n      $(\"#selectPermisos\").multiSelect(\"refresh\");\n    }\n    // generalidades.ocultarCargando(\"body\");\n  };\n  var error = function error(response) {\n    generalidades.toastrGenerico(response.estado, response.mensaje);\n    // generalidades.ocultarCargando(\"body\");\n  };\n\n  // generalidades.mostrarCargando(\"body\");\n  generalidades.post(route('roles.buscarPermisos'), config, success, error);\n};\nvar enviarDatosRoles = function enviarDatosRoles() {\n  var form = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var formData = new FormData(document.querySelector(formRoles));\n  formData.set('roles', $('#selectRoles').val());\n  formData.set('id', $('#idUsuario').val());\n  var config = {\n    'method': 'POST',\n    'headers': {\n      'Accept': generalidades.CONTENT_TYPE_JSON\n    },\n    'body': formData\n  };\n  var success = function success(response) {\n    if (response.estado == 'success') {\n      generalidades.ocultarValidaciones(formRoles);\n    }\n    generalidades.ocultarCargando(formRoles);\n    generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n  };\n  var error = function error(response) {\n    generalidades.ocultarCargando(formRoles);\n    generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n    generalidades.mostrarValidaciones(formRoles, response.validaciones);\n  };\n  var ruta = route(\"roles.asignarRol\", {\n    usuario: formData.get('id')\n  });\n  generalidades.create(ruta, config, success, error);\n  generalidades.mostrarCargando(formRoles);\n};\nvar enviarDatosPermisos = function enviarDatosPermisos() {\n  var form = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var formData = new FormData(document.querySelector(formPermisos));\n  formData.set('permisos', $('#selectPermisos').val());\n  formData.set('id', $('#idUsuario').val());\n  var config = {\n    'method': 'POST',\n    'headers': {\n      'Accept': generalidades.CONTENT_TYPE_JSON\n    },\n    'body': formData\n  };\n  var success = function success(response) {\n    if (response.estado == 'success') {\n      generalidades.ocultarValidaciones(formPermisos);\n    }\n    generalidades.ocultarCargando(formPermisos);\n    generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n  };\n  var error = function error(response) {\n    generalidades.ocultarCargando(formPermisos);\n    generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n    generalidades.mostrarValidaciones(formPermisos, response.validaciones);\n  };\n  var ruta = route(\"roles.asignarPermiso\", {\n    usuario: formData.get('id')\n  });\n  generalidades.create(ruta, config, success, error);\n  generalidades.mostrarCargando(formPermisos);\n};\n__webpack_require__(/*! ./listado */ \"./resources/js/usuarios/listado.js\");\n// require('./editar');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/usuarios/principal.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/usuarios/principal.js");
/******/ 	
/******/ })()
;