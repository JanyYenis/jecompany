/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/hoja_vida/crear.js":
/*!*****************************************!*\
  !*** ./resources/js/hoja_vida/crear.js ***!
  \*****************************************/
/***/ (() => {

eval("\n\nfunction _readOnlyError(r) { throw new TypeError('\"' + r + '\" is read-only'); }\nvar formHojaVida1 = \"#formHojaVida1\";\nvar formHojaVida2 = \"#formHojaVida2\";\nvar formHojaVida3 = \"#formHojaVida3\";\nvar formHojaVida4 = \"#formHojaVida4\";\nvar formHojaVida5 = \"#formHojaVida5\";\nvar formHojaVida6 = \"#formHojaVida6\";\n$(function () {\n  iniciarComponentesCrear();\n  generalidades.validarFormulario(formHojaVida1, form1);\n  generalidades.validarFormulario(formHojaVida2, form2);\n  generalidades.validarFormulario(formHojaVida3, form3);\n  generalidades.validarFormulario(formHojaVida4, form4);\n  generalidades.validarFormulario(formHojaVida5, form5);\n  generalidades.validarFormulario(formHojaVida6, form6);\n});\nvar iniciarComponentesCrear = function iniciarComponentesCrear() {\n  var form = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var editors = $(\".kt_docs_quill_autosave\");\n\n  // Itera a través de cada elemento con la clase \"editor\"\n  editors.each(function () {\n    var editor = $(this);\n    var quill = new Quill(editor[0], {\n      modules: {\n        toolbar: [[{\n          header: [1, 2, false]\n        }], ['bold', 'italic', 'underline'], ['image', 'code-block']]\n      },\n      placeholder: 'Escribe aqui...',\n      theme: 'snow' // or 'bubble'\n    });\n  });\n  var element = document.querySelector(\"#kt_stepper_example_clickable\");\n  var stepper = new KTStepper(element);\n  stepper.on(\"kt.stepper.click\", function (stepper) {\n    stepper.goTo(stepper.getClickedStepIndex()); // go to clicked step\n  });\n  stepper.on(\"kt.stepper.next\", function (stepper) {\n    stepper.goNext(); // go next step\n  });\n  stepper.on(\"kt.stepper.previous\", function (stepper) {\n    stepper.goPrevious(); // go previous step\n  });\n  generalidades.initTelefonoInput(\"\".concat(form, \" #tel\"));\n\n  // Email address\n  Inputmask({\n    mask: \"*{1,20}[.*{1,20}][.*{1,20}][.*{1,20}]@*{1,20}[.*{2,6}][.*{1,2}]\",\n    greedy: false,\n    onBeforePaste: function onBeforePaste(pastedValue, opts) {\n      pastedValue = pastedValue.toLowerCase();\n      return pastedValue.replace(\"mailto:\", \"\");\n    },\n    definitions: {\n      \"*\": {\n        validator: '[0-9A-Za-z!#$%&\"*+/=?^_`{|}~\\-]',\n        cardinality: 1,\n        casing: \"lower\"\n      }\n    }\n  }).mask(\"#inputEmail\");\n  $(\"#kt_datepicker_1\").flatpickr();\n  $('#kt_docs_repeater_basic').repeater({\n    initEmpty: false,\n    defaultValues: {\n      'text-input': 'foo'\n    },\n    show: function show() {\n      $(this).slideDown();\n    },\n    hide: function hide(deleteElement) {\n      $(this).slideUp(deleteElement);\n    }\n  });\n\n  // Format options\n  var optionFormat = function optionFormat(item) {\n    if (!item.id) {\n      return item.text;\n    }\n    var span = document.createElement('span');\n    var imgUrl = item.element.getAttribute('data-kt-select2-country');\n    var template = '';\n    template += '<img src=\"' + imgUrl + '\" class=\"rounded-circle h-40px w-40px me-4\" alt=\"image\"/>';\n    template += item.text;\n    span.innerHTML = template;\n    return $(span);\n  };\n\n  // Init Select2 --- more info: https://select2.org/\n  $('#selectPais').select2({\n    templateSelection: optionFormat,\n    templateResult: optionFormat\n  });\n  $(document).on('change', '#selectPais', function () {\n    if (this.value) {\n      $.ajax({\n        type: 'GET',\n        url: route('ciudades.buscar', {\n          'pais': this.value\n        }),\n        success: function success(response) {\n          if (response.estado == 'success') {\n            var _response$ciudades;\n            var ciudades = (_response$ciudades = response === null || response === void 0 ? void 0 : response.ciudades) !== null && _response$ciudades !== void 0 ? _response$ciudades : [];\n            var selectCiudad = $(\"#selectCiudad\");\n            selectCiudad.empty();\n            var opcion = new Option('', '', false, false);\n            selectCiudad.append(opcion);\n            ciudades.forEach(function (ciudad) {\n              var selected = false;\n              if (selectCiudad.attr('data-ciudad') && selectCiudad.attr('data-ciudad') == ciudad.id) {\n                selected = true;\n              }\n              selectCiudad.append(new Option(ciudad.text, ciudad.id, selected, selected));\n            });\n            $('#selectCiudad').attr('disabled', false);\n          }\n          generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n          // $('.divOpciones').removeClass('d-none');\n        }\n      });\n    } else {\n      $('#selectCiudad').attr('disabled', true);\n    }\n  });\n  $('#selectPais').trigger('change');\n};\nvar form1 = function form1() {\n  enviarDatos(formHojaVida1);\n};\nvar form2 = function form2() {\n  enviarDatos(formHojaVida2);\n};\nvar form3 = function form3() {\n  enviarDatos(formHojaVida3);\n};\nvar form4 = function form4() {\n  enviarDatos(formHojaVida4);\n};\nvar form5 = function form5() {\n  enviarDatos(formHojaVida5);\n};\nvar form6 = function form6() {\n  enviarDatos(formHojaVida6);\n};\nvar enviarDatos = function enviarDatos(form) {\n  var _$$val;\n  var formData = new FormData(document.querySelector(form));\n  var formulario = $(form);\n  var editor = formulario.find(\".kt_docs_quill_autosave\");\n  var campo = editor.attr('name');\n  var contenido = editor[0].children[0].innerHTML; // Puede variar según la estructura de Quill\n  formData.set('id_usuario', $('#idUsuario').val());\n  formData.set('id', (_$$val = $('#idHoja').val()) !== null && _$$val !== void 0 ? _$$val : null);\n  formData.set(campo, contenido);\n  var config = {\n    'method': 'POST',\n    'headers': {\n      'Accept': generalidades.CONTENT_TYPE_JSON\n    },\n    'body': formData\n  };\n  var success = function success(response) {\n    if (response.estado == 'success') {\n      generalidades.ocultarValidaciones(form);\n      if ($('.btnTerminar').is(\":visible\")) {\n        location.href = route('hoja-de-vida.index');\n      } else {\n        $('.btnNext').trigger('click');\n      }\n    }\n    generalidades.ocultarCargando(form);\n    generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n  };\n  var error = function error(response) {\n    generalidades.ocultarCargando(form);\n    generalidades.toastrGenerico(response === null || response === void 0 ? void 0 : response.estado, response === null || response === void 0 ? void 0 : response.mensaje);\n    generalidades.mostrarValidaciones(form, response.validaciones);\n  };\n  var ruta = route(\"hoja-de-vida.store\");\n  if (formData.get('id')) {\n    route(\"hoja-de-vida.update\", {\n      'hojaVida': formData.get('id')\n    }), _readOnlyError(\"ruta\");\n  }\n  generalidades.create(ruta, config, success, error);\n  generalidades.mostrarCargando(form);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/hoja_vida/crear.js\n");

/***/ }),

/***/ "./resources/js/hoja_vida/principal.js":
/*!*********************************************!*\
  !*** ./resources/js/hoja_vida/principal.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n$(function () {\n  iniciarComponentes();\n});\nvar iniciarComponentes = function iniciarComponentes() {};\n__webpack_require__(/*! ./crear */ \"./resources/js/hoja_vida/crear.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvaG9qYV92aWRhL3ByaW5jaXBhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYkEsQ0FBQyxDQUFDLFlBQVk7RUFDVkMsa0JBQWtCLENBQUMsQ0FBQztBQUN4QixDQUFDLENBQUM7QUFFRixJQUFNQSxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBLEVBQVMsQ0FFakMsQ0FBQztBQUVEQyxtQkFBTyxDQUFDLGtEQUFTLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvaG9qYV92aWRhL3ByaW5jaXBhbC5qcz9iZGFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICBpbmljaWFyQ29tcG9uZW50ZXMoKTtcclxufSk7XHJcblxyXG5jb25zdCBpbmljaWFyQ29tcG9uZW50ZXMgPSAoKSA9PiB7XHJcbiAgICBcclxufVxyXG5cclxucmVxdWlyZSgnLi9jcmVhcicpOyJdLCJuYW1lcyI6WyIkIiwiaW5pY2lhckNvbXBvbmVudGVzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/hoja_vida/principal.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/hoja_vida/principal.js");
/******/ 	
/******/ })()
;